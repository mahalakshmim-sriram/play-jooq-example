/*
 * This file is generated by jOOQ.
 */
package com.example.models.tables.daos;


import com.example.models.tables.Users;
import com.example.models.tables.records.UsersRecord;

import java.time.OffsetDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersDao extends DAOImpl<UsersRecord, com.example.models.tables.pojos.Users, Integer> {

    /**
     * Create a new UsersDao without any configuration
     */
    public UsersDao() {
        super(Users.USERS, com.example.models.tables.pojos.Users.class);
    }

    /**
     * Create a new UsersDao with an attached configuration
     */
    public UsersDao(Configuration configuration) {
        super(Users.USERS, com.example.models.tables.pojos.Users.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.example.models.tables.pojos.Users object) {
        return object.getUserId();
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.example.models.tables.pojos.Users> fetchByUserId(Integer... values) {
        return fetch(Users.USERS.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public com.example.models.tables.pojos.Users fetchOneByUserId(Integer value) {
        return fetchOne(Users.USERS.USER_ID, value);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.example.models.tables.pojos.Users> fetchByUsername(String... values) {
        return fetch(Users.USERS.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public com.example.models.tables.pojos.Users fetchOneByUsername(String value) {
        return fetchOne(Users.USERS.USERNAME, value);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.example.models.tables.pojos.Users> fetchByPassword(String... values) {
        return fetch(Users.USERS.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>salt IN (values)</code>
     */
    public List<com.example.models.tables.pojos.Users> fetchBySalt(String... values) {
        return fetch(Users.USERS.SALT, values);
    }

    /**
     * Fetch records that have <code>firstname IN (values)</code>
     */
    public List<com.example.models.tables.pojos.Users> fetchByFirstname(String... values) {
        return fetch(Users.USERS.FIRSTNAME, values);
    }

    /**
     * Fetch records that have <code>lastname IN (values)</code>
     */
    public List<com.example.models.tables.pojos.Users> fetchByLastname(String... values) {
        return fetch(Users.USERS.LASTNAME, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.example.models.tables.pojos.Users> fetchByEmail(String... values) {
        return fetch(Users.USERS.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public com.example.models.tables.pojos.Users fetchOneByEmail(String value) {
        return fetchOne(Users.USERS.EMAIL, value);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.example.models.tables.pojos.Users> fetchByStatus(Short... values) {
        return fetch(Users.USERS.STATUS, values);
    }

    /**
     * Fetch records that have <code>createdon IN (values)</code>
     */
    public List<com.example.models.tables.pojos.Users> fetchByCreatedon(OffsetDateTime... values) {
        return fetch(Users.USERS.CREATEDON, values);
    }

    /**
     * Fetch records that have <code>mobile IN (values)</code>
     */
    public List<com.example.models.tables.pojos.Users> fetchByMobile(Long... values) {
        return fetch(Users.USERS.MOBILE, values);
    }

    /**
     * Fetch records that have <code>changedon IN (values)</code>
     */
    public List<com.example.models.tables.pojos.Users> fetchByChangedon(OffsetDateTime... values) {
        return fetch(Users.USERS.CHANGEDON, values);
    }
}
