/*
 * This file is generated by jOOQ.
 */
package com.example.models.tables.pojos;


import com.example.models.tables.interfaces.IUsers;

import java.time.OffsetDateTime;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users implements IUsers {

    private static final long serialVersionUID = -1438990717;

    private final Integer        userId;
    private final String         username;
    private final String         password;
    private final String         salt;
    private final String         firstname;
    private final String         lastname;
    private final String         email;
    private final Short          status;
    private final OffsetDateTime createdon;
    private final Long           mobile;
    private final OffsetDateTime changedon;

    public Users(IUsers value) {
        this.userId = value.getUserId();
        this.username = value.getUsername();
        this.password = value.getPassword();
        this.salt = value.getSalt();
        this.firstname = value.getFirstname();
        this.lastname = value.getLastname();
        this.email = value.getEmail();
        this.status = value.getStatus();
        this.createdon = value.getCreatedon();
        this.mobile = value.getMobile();
        this.changedon = value.getChangedon();
    }

    public Users(
        Integer        userId,
        String         username,
        String         password,
        String         salt,
        String         firstname,
        String         lastname,
        String         email,
        Short          status,
        OffsetDateTime createdon,
        Long           mobile,
        OffsetDateTime changedon
    ) {
        this.userId = userId;
        this.username = username;
        this.password = password;
        this.salt = salt;
        this.firstname = firstname;
        this.lastname = lastname;
        this.email = email;
        this.status = status;
        this.createdon = createdon;
        this.mobile = mobile;
        this.changedon = changedon;
    }

    @Override
    public Integer getUserId() {
        return this.userId;
    }

    @NotNull
    @Override
    public String getUsername() {
        return this.username;
    }

    @NotNull
    @Override
    public String getPassword() {
        return this.password;
    }

    @Override
    public String getSalt() {
        return this.salt;
    }

    @NotNull
    @Override
    public String getFirstname() {
        return this.firstname;
    }

    @NotNull
    @Override
    public String getLastname() {
        return this.lastname;
    }

    @NotNull
    @Override
    public String getEmail() {
        return this.email;
    }

    @NotNull
    @Override
    public Short getStatus() {
        return this.status;
    }

    @Override
    public OffsetDateTime getCreatedon() {
        return this.createdon;
    }

    @NotNull
    @Override
    public Long getMobile() {
        return this.mobile;
    }

    @Override
    public OffsetDateTime getChangedon() {
        return this.changedon;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (username == null) {
            if (other.username != null)
                return false;
        }
        else if (!username.equals(other.username))
            return false;
        if (password == null) {
            if (other.password != null)
                return false;
        }
        else if (!password.equals(other.password))
            return false;
        if (salt == null) {
            if (other.salt != null)
                return false;
        }
        else if (!salt.equals(other.salt))
            return false;
        if (firstname == null) {
            if (other.firstname != null)
                return false;
        }
        else if (!firstname.equals(other.firstname))
            return false;
        if (lastname == null) {
            if (other.lastname != null)
                return false;
        }
        else if (!lastname.equals(other.lastname))
            return false;
        if (email == null) {
            if (other.email != null)
                return false;
        }
        else if (!email.equals(other.email))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (createdon == null) {
            if (other.createdon != null)
                return false;
        }
        else if (!createdon.equals(other.createdon))
            return false;
        if (mobile == null) {
            if (other.mobile != null)
                return false;
        }
        else if (!mobile.equals(other.mobile))
            return false;
        if (changedon == null) {
            if (other.changedon != null)
                return false;
        }
        else if (!changedon.equals(other.changedon))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.salt == null) ? 0 : this.salt.hashCode());
        result = prime * result + ((this.firstname == null) ? 0 : this.firstname.hashCode());
        result = prime * result + ((this.lastname == null) ? 0 : this.lastname.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.createdon == null) ? 0 : this.createdon.hashCode());
        result = prime * result + ((this.mobile == null) ? 0 : this.mobile.hashCode());
        result = prime * result + ((this.changedon == null) ? 0 : this.changedon.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(userId);
        sb.append(", ").append(username);
        sb.append(", ").append(password);
        sb.append(", ").append(salt);
        sb.append(", ").append(firstname);
        sb.append(", ").append(lastname);
        sb.append(", ").append(email);
        sb.append(", ").append(status);
        sb.append(", ").append(createdon);
        sb.append(", ").append(mobile);
        sb.append(", ").append(changedon);

        sb.append(")");
        return sb.toString();
    }
}
