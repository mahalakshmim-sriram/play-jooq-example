/*
 * This file is generated by jOOQ.
 */
package com.example.models.tables.records;


import com.example.models.tables.Users;
import com.example.models.tables.interfaces.IUsers;

import java.time.OffsetDateTime;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record11<Integer, String, String, String, String, String, String, Short, OffsetDateTime, Long, OffsetDateTime>, IUsers {

    private static final long serialVersionUID = -1948145419;

    /**
     * Setter for <code>public.users.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.users.user_id</code>.
     */
    @Override
    public Integer getUserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.users.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.users.username</code>.
     */
    @NotNull
    @Override
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.users.password</code>.
     */
    @NotNull
    @Override
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.salt</code>.
     */
    public void setSalt(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.users.salt</code>.
     */
    @Override
    public String getSalt() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.users.firstname</code>.
     */
    public void setFirstname(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.users.firstname</code>.
     */
    @NotNull
    @Override
    public String getFirstname() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.users.lastname</code>.
     */
    public void setLastname(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.users.lastname</code>.
     */
    @NotNull
    @Override
    public String getLastname() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.users.email</code>.
     */
    public void setEmail(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    @NotNull
    @Override
    public String getEmail() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.users.status</code>.
     */
    public void setStatus(Short value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.users.status</code>.
     */
    @NotNull
    @Override
    public Short getStatus() {
        return (Short) get(7);
    }

    /**
     * Setter for <code>public.users.createdon</code>.
     */
    public void setCreatedon(OffsetDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.users.createdon</code>.
     */
    @Override
    public OffsetDateTime getCreatedon() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>public.users.mobile</code>.
     */
    public void setMobile(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.users.mobile</code>.
     */
    @NotNull
    @Override
    public Long getMobile() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>public.users.changedon</code>.
     */
    public void setChangedon(OffsetDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.users.changedon</code>.
     */
    @Override
    public OffsetDateTime getChangedon() {
        return (OffsetDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Integer, String, String, String, String, String, String, Short, OffsetDateTime, Long, OffsetDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Integer, String, String, String, String, String, String, Short, OffsetDateTime, Long, OffsetDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Users.USERS.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Users.USERS.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Users.USERS.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Users.USERS.SALT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Users.USERS.FIRSTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Users.USERS.LASTNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Users.USERS.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field8() {
        return Users.USERS.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field9() {
        return Users.USERS.CREATEDON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return Users.USERS.MOBILE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field11() {
        return Users.USERS.CHANGEDON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSalt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getFirstname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getLastname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component8() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component9() {
        return getCreatedon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component10() {
        return getMobile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component11() {
        return getChangedon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSalt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getFirstname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getLastname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value8() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value9() {
        return getCreatedon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getMobile();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value11() {
        return getChangedon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value1(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value2(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value3(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value4(String value) {
        setSalt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value5(String value) {
        setFirstname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value6(String value) {
        setLastname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value7(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value8(Short value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value9(OffsetDateTime value) {
        setCreatedon(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value10(Long value) {
        setMobile(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord value11(OffsetDateTime value) {
        setChangedon(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, Short value8, OffsetDateTime value9, Long value10, OffsetDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    public void from(IUsers from) {
        setUserId(from.getUserId());
        setUsername(from.getUsername());
        setPassword(from.getPassword());
        setSalt(from.getSalt());
        setFirstname(from.getFirstname());
        setLastname(from.getLastname());
        setEmail(from.getEmail());
        setStatus(from.getStatus());
        setCreatedon(from.getCreatedon());
        setMobile(from.getMobile());
        setChangedon(from.getChangedon());
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Integer userId, String username, String password, String salt, String firstname, String lastname, String email, Short status, OffsetDateTime createdon, Long mobile, OffsetDateTime changedon) {
        super(Users.USERS);

        set(0, userId);
        set(1, username);
        set(2, password);
        set(3, salt);
        set(4, firstname);
        set(5, lastname);
        set(6, email);
        set(7, status);
        set(8, createdon);
        set(9, mobile);
        set(10, changedon);
    }
}
